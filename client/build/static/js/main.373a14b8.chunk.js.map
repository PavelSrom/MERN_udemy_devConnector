{"version":3,"sources":["actions/alert.js","actions/types.js","utils/setAuthToken.js","actions/auth.js","components/auth/Register.js","components/auth/Login.js","components/layout/Navbar.js","components/layout/Landing.js","components/layout/Alert.js","components/layout/Spinner.js","components/dashboard/DashboardActions.js","actions/profile.js","components/dashboard/Experience.js","components/dashboard/Education.js","components/dashboard/Dashboard.js","components/profile-form/CreateProfile.js","components/profile-form/EditProfile.js","components/profile-form/AddExperience.js","components/profile-form/AddEducation.js","components/profiles/ProfileItem.js","components/profiles/Profiles.js","components/profile/ProfileTop.js","components/profile/ProfileAbout.js","components/profile/ProfileExperience.js","components/profile/ProfileEducation.js","components/profile/Profile.js","components/posts/PostItem.js","actions/post.js","components/posts/PostForm.js","components/posts/Posts.js","components/post/CommentForm.js","components/post/CommentItem.js","components/post/Post.js","components/routing/PrivateRoute.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/post.js","reducers/index.js","store.js","App.js","index.js"],"names":["setAlert","msg","alertType","dispatch","id","uuid","v4","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","localStorage","get","response","console","log","data","connect","state","isAuthenticated","auth","register","name","email","password","config","body","JSON","stringify","post","errors","forEach","error","useState","password2","formData","setFormData","onChange","e","target","value","to","className","onSubmit","preventDefault","placeholder","minLength","login","required","logout","loading","guestLinks","authLinks","onClick","href","alerts","alert","length","map","key","Spinner","style","display","backgroundColor","position","top","bottom","left","right","width","height","zIndex","opacity","margin","color","fontSize","DashboardActions","getCurrentProfile","res","statusText","status","createProfile","history","edit","push","deleteExperience","delete","experience","experiences","exp","_id","company","title","format","from","deleteEducation","education","educations","edu","school","degree","profile","deleteAccount","window","confirm","user","useEffect","withRouter","website","location","skills","githubusername","bio","twitter","facebook","linkedin","youtube","instagram","displaySocialInputs","toggleSocialInputs","social","addExperience","put","current","description","toDateDisabled","toggleDisabled","checked","disabled","cols","rows","addEducation","fieldofstudy","ProfileItem","avatar","src","alt","slice","skill","index","getProfiles","profiles","ProfileTop","rel","ProfileAbout","trim","split","ProfileExperience","ProfileEducation","getProfileById","userId","match","params","PostItem","addLike","removeLike","deletePost","text","likes","comments","date","showActions","defaultProps","postID","addPost","setText","getPosts","posts","addComment","deleteComment","commentID","comment","getPost","com","Component","component","rest","render","props","initialState","getItem","combineReducers","action","filter","setItem","removeItem","repos","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","Landing","Register","Login","Profiles","Profile","Dashboard","CreateProfile","EditProfile","AddExperience","AddEducation","Posts","Post","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.373a14b8.chunk.js","sourcesContent":["import uuid from 'uuid'\r\nimport { SET_ALERT, REMOVE_ALERT } from './types'\r\n\r\nexport const setAlert = (msg, alertType) => dispatch => {\r\n  const id = uuid.v4()\r\n  dispatch({ type: SET_ALERT, payload: { msg, alertType, id } })\r\n\r\n  setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), 5000)\r\n}\r\n","// alert reducer\r\nexport const SET_ALERT = 'SET_ALERT'\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT'\r\n\r\n// registering\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS'\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL'\r\n\r\n// constant checking for the server if the user is authenticated (hitting GET /api/auth)\r\nexport const USER_LOADED = 'USER_LOADED'\r\nexport const AUTH_ERROR = 'AUTH_ERROR'\r\n\r\n// logging in\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL'\r\n\r\n// logout\r\nexport const LOGOUT = 'LOGOUT'\r\n\r\n// profile\r\nexport const GET_PROFILE = 'GET_PROFILE'\r\nexport const GET_PROFILES = 'GET_PROFILES'\r\nexport const PROFILE_ERROR = 'PROFILE_ERROR'\r\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE'\r\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE'\r\nexport const ACCOUNT_DELETED = 'ACCOUNT_DELETED'\r\n\r\n// posts\r\nexport const GET_POSTS = 'GET_POSTS'\r\nexport const GET_POST = 'GET_POST'\r\nexport const POST_ERROR = 'POST_ERROR'\r\nexport const UPDATE_LIKES = 'UPDATE_LIKES'\r\nexport const DELETE_POST = 'DELETE_POST'\r\nexport const ADD_POST = 'ADD_POST'\r\nexport const ADD_COMMENT = 'ADD_COMMENT'\r\nexport const REMOVE_COMMENT = 'REMOVE_COMMENT'\r\n","import axios from 'axios'\r\n\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    axios.defaults.headers.common['x-auth-token'] = token\r\n  } else {\r\n    delete axios.defaults.headers.common['x-auth-token']\r\n  }\r\n}\r\n\r\nexport default setAuthToken","import axios from 'axios'\r\nimport { setAlert } from './alert'\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_PROFILE\r\n} from '../actions/types'\r\nimport setAuthToken from '../utils/setAuthToken'\r\n\r\n// load user\r\nexport const loadUser = () => async dispatch => {\r\n  if (localStorage.token) {\r\n    // localStorage.token ???\r\n    setAuthToken(localStorage.token)\r\n  }\r\n\r\n  try {\r\n    const response = await axios.get('/api/auth')\r\n    console.log(response.data)\r\n    dispatch({ type: USER_LOADED, payload: response.data })\r\n  } catch (err) {\r\n    dispatch({ type: AUTH_ERROR })\r\n  }\r\n}\r\n\r\n// register user\r\nexport const register = ({ name, email, password }) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }\r\n  const body = JSON.stringify({ name, email, password })\r\n\r\n  try {\r\n    const response = await axios.post('/api/users', body, config)\r\n    dispatch({ type: REGISTER_SUCCESS, payload: response.data })\r\n    dispatch(loadUser())\r\n  } catch (err) {\r\n    console.log(err.response.data.errors)\r\n    // just visual alert from the back-end\r\n    const errors = err.response.data.errors\r\n    if (errors) errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n\r\n    dispatch({ type: REGISTER_FAIL })\r\n  }\r\n}\r\n\r\n// login user\r\nexport const login = (email, password) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }\r\n  const body = JSON.stringify({ email, password })\r\n\r\n  try {\r\n    const response = await axios.post('/api/auth', body, config)\r\n    dispatch({ type: LOGIN_SUCCESS, payload: response.data })\r\n    dispatch(loadUser())\r\n  } catch (err) {\r\n    console.log(err.response.data.errors)\r\n    // just visual alert from the back-end\r\n    const errors = err.response.data.errors\r\n    if (errors) errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n\r\n    dispatch({ type: LOGIN_FAIL })\r\n  }\r\n}\r\n\r\n// logout / clear profile\r\nexport const logout = () => dispatch => {\r\n  dispatch({ type: CLEAR_PROFILE })\r\n  dispatch({ type: LOGOUT })\r\n}\r\n","import React, { Fragment, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { setAlert } from '../../actions/alert'\r\nimport { register } from '../../actions/auth'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Register = ({ setAlert, register, isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    password2: ''\r\n  })\r\n\r\n  const onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value })\r\n  const onSubmit = e => {\r\n    e.preventDefault()\r\n    if (password !== password2) {\r\n      setAlert('Passwords do not match', 'danger')\r\n      console.log('passwords do not match')\r\n    } else {\r\n      console.log('success')\r\n      register({ name, email, password })\r\n    }\r\n  }\r\n\r\n  const { name, email, password, password2 } = formData\r\n\r\n  // redirect if logged in\r\n  if (isAuthenticated) return <Redirect to=\"/dashboard\" />\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Sign Up</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\"></i> Create Your Account\r\n      </p>\r\n\r\n      <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Name\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={e => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email Address\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            This site uses Gravatar so if you want a profile image, use a\r\n            Gravatar email\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            minLength=\"6\"\r\n            value={password}\r\n            onChange={e => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            name=\"password2\"\r\n            minLength=\"6\"\r\n            value={password2}\r\n            onChange={e => onChange(e)}\r\n          />\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\r\n      </form>\r\n      <p className=\"my-1\">\r\n        Already have an account? <Link to=\"/login\">Sign In</Link>\r\n      </p>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nRegister.propTypes = {\r\n  setAlert: PropTypes.func.isRequired,\r\n  register: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { setAlert, register }\r\n)(Register)\r\n","import React, { Fragment, useState } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { login } from '../../actions/auth'\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: ''\r\n  })\r\n\r\n  const onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value })\r\n  const onSubmit = e => {\r\n    e.preventDefault()\r\n    login(email, password)\r\n  }\r\n\r\n  const { email, password } = formData\r\n\r\n  // redirect if logged in\r\n  if (isAuthenticated) return <Redirect to=\"/dashboard\" />\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Sign In</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\"></i> Sign into your account\r\n      </p>\r\n\r\n      <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email Address\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={e => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            minLength=\"6\"\r\n            value={password}\r\n            onChange={e => onChange(e)}\r\n          />\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\" />\r\n      </form>\r\n      <p className=\"my-1\">\r\n        Don't have an account? <Link to=\"/register\">Sign Up</Link>\r\n      </p>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { login }\r\n)(Login)\r\n","import React, { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { logout } from '../../actions/auth'\r\n\r\nconst Navbar = ({ logout, auth: { isAuthenticated, loading } }) => {\r\n  const guestLinks = (\r\n    <ul>\r\n      <li>\r\n        <Link to=\"/profiles\">Developers</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/register\">Register</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/login\">Login</Link>\r\n      </li>\r\n    </ul>\r\n  )\r\n\r\n  const authLinks = (\r\n    <ul>\r\n      <li>\r\n        <Link to=\"/profiles\">Developers</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/posts\">Posts</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/dashboard\">\r\n          <i className=\"fas fa-user\" />{' '}\r\n          <span className=\"hide-sm\">Dashboard</span>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <a onClick={logout} href=\"#!\">\r\n          <i className=\"fas fa-sign-out-alt\"></i>\r\n          <span className=\"hide-sm\">Logout</span>\r\n        </a>\r\n      </li>\r\n    </ul>\r\n  )\r\n\r\n  return (\r\n    <nav className=\"navbar bg-dark\">\r\n      <h1>\r\n        <Link to=\"/\">\r\n          <i className=\"fas fa-code\"></i> DevConnector\r\n        </Link>\r\n      </h1>\r\n      {!loading && (\r\n        <Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>\r\n      )}\r\n    </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { logout })(Navbar)\r\n","import React from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Landing = ({ isAuthenticated }) => {\r\n  // if we're logged in, we can't access the landing page\r\n  if (isAuthenticated) return <Redirect to=\"/dashboard\" />\r\n\r\n  return (\r\n    <section className=\"landing\">\r\n      <div className=\"dark-overlay\">\r\n        <div className=\"landing-inner\">\r\n          <h1 className=\"x-large\">Developer Connector</h1>\r\n          <p className=\"lead\">\r\n            Create a developer profile/portfolio, share posts and get help from\r\n            other developers\r\n          </p>\r\n          <div className=\"buttons\">\r\n            <Link to=\"/register\" className=\"btn btn-primary\">\r\n              Sign Up\r\n            </Link>\r\n            <Link to=\"/login\" className=\"btn btn-light\">\r\n              Login\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nLanding.propTypes = {\r\n  isAuthenticated: PropTypes.bool\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\nexport default connect(mapStateToProps)(Landing)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Alert = ({ alerts }) =>\r\n  alerts !== null &&\r\n  alerts.length > 0 &&\r\n  alerts.map(alert => (\r\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\r\n      {alert.msg}\r\n    </div>\r\n  ))\r\n\r\nAlert.propTypes = {\r\n  alerts: PropTypes.array.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  alerts: state.alert\r\n})\r\n\r\nexport default connect(mapStateToProps)(Alert)\r\n","import React from 'react'\r\n\r\nconst Spinner = () => {\r\n  const spinnerStyle = {\r\n    display: 'flex',\r\n    backgroundColor: '#000',\r\n    position: 'absolute',\r\n    top: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    width: '100vw',\r\n    height: '100vh',\r\n    zIndex: 10,\r\n    opacity: 0.5\r\n  }\r\n\r\n  return (\r\n    <div style={spinnerStyle}>\r\n      <p\r\n        style={{\r\n          margin: 'auto',\r\n          color: '#fff',\r\n          fontSize: '24px'\r\n        }}\r\n      >\r\n        Loading...\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Spinner\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst DashboardActions = () => {\r\n  return (\r\n    <div className=\"dash-buttons\">\r\n      <Link to=\"/edit-profile\" className=\"btn btn-light\">\r\n        <i className=\"fas fa-user-circle text-primary\"></i> Edit Profile\r\n      </Link>\r\n      <Link to=\"/add-experience\" className=\"btn btn-light\">\r\n        <i className=\"fab fa-black-tie text-primary\"></i> Add Experience\r\n      </Link>\r\n      <Link to=\"/add-education\" className=\"btn btn-light\">\r\n        <i className=\"fas fa-graduation-cap text-primary\"></i> Add Education\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DashboardActions\r\n","import axios from 'axios'\r\nimport { setAlert } from './alert'\r\nimport {\r\n  GET_PROFILE,\r\n  GET_PROFILES,\r\n  PROFILE_ERROR,\r\n  UPDATE_PROFILE,\r\n  CLEAR_PROFILE,\r\n  ACCOUNT_DELETED,\r\n  GET_REPOS\r\n} from './types'\r\n\r\n// get current user's profile\r\nexport const getCurrentProfile = () => async dispatch => {\r\n  try {\r\n    const res = await axios.get('/api/profile/me')\r\n    console.log(res)\r\n    dispatch({ type: GET_PROFILE, payload: res.data })\r\n  } catch (err) {\r\n    console.log(err)\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    })\r\n  }\r\n}\r\n\r\n// get all profiles\r\nexport const getProfiles = () => async dispatch => {\r\n  dispatch({ type: CLEAR_PROFILE })\r\n  try {\r\n    const res = await axios.get('/api/profile')\r\n    console.log(res)\r\n    dispatch({ type: GET_PROFILES, payload: res.data })\r\n  } catch (err) {\r\n    console.log(err)\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    })\r\n  }\r\n}\r\n\r\n// get profile by id\r\nexport const getProfileById = userId => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/profile/user/${userId}`)\r\n    console.log(res)\r\n    dispatch({ type: GET_PROFILE, payload: res.data })\r\n  } catch (err) {\r\n    console.log(err)\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    })\r\n  }\r\n}\r\n\r\n// create / update profile\r\nexport const createProfile = (\r\n  formData,\r\n  history,\r\n  edit = false\r\n) => async dispatch => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }\r\n\r\n    const res = await axios.post('/api/profile', formData, config)\r\n    dispatch({ type: GET_PROFILE, payload: res.data })\r\n    dispatch(setAlert(edit ? 'Profile updated' : 'Profile created', 'success'))\r\n\r\n    if (!edit) {\r\n      history.push('/dashboard') // redirect to dashboard\r\n    }\r\n  } catch (err) {\r\n    const errors = err.response.data.errors\r\n    if (errors) errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    })\r\n  }\r\n}\r\n\r\n// adding user's experience\r\nexport const addExperience = (formData, history) => async dispatch => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }\r\n\r\n    const res = await axios.put('/api/profile/experience', formData, config)\r\n    dispatch({ type: UPDATE_PROFILE, payload: res.data })\r\n    dispatch(setAlert('Experience added', 'success'))\r\n    history.push('/dashboard')\r\n  } catch (err) {\r\n    const errors = err.response.data.errors\r\n    if (errors) errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    })\r\n  }\r\n}\r\n\r\n// adding user's education\r\nexport const addEducation = (formData, history) => async dispatch => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }\r\n\r\n    const res = await axios.put('/api/profile/education', formData, config)\r\n    dispatch({ type: UPDATE_PROFILE, payload: res.data })\r\n    dispatch(setAlert('Education added', 'success'))\r\n    history.push('/dashboard')\r\n  } catch (err) {\r\n    const errors = err.response.data.errors\r\n    if (errors) errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    })\r\n  }\r\n}\r\n\r\n// delete experience\r\nexport const deleteExperience = id => async dispatch => {\r\n  try {\r\n    const res = await axios.delete(`/api/profile/experience/${id}`)\r\n    dispatch({ type: UPDATE_PROFILE, payload: res.data })\r\n    dispatch(setAlert('Experience removed', 'success'))\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    })\r\n  }\r\n}\r\n\r\n// delete education\r\nexport const deleteEducation = id => async dispatch => {\r\n  try {\r\n    const res = await axios.delete(`/api/profile/education/${id}`)\r\n    dispatch({ type: UPDATE_PROFILE, payload: res.data })\r\n    dispatch(setAlert('Education removed', 'success'))\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    })\r\n  }\r\n}\r\n\r\n// delete account and profile\r\nexport const deleteAccount = () => async dispatch => {\r\n  if (window.confirm('Are you sure? This can NOT be undone!')) {\r\n    try {\r\n      await axios.delete('/api/profile')\r\n      dispatch({ type: CLEAR_PROFILE })\r\n      dispatch({ type: ACCOUNT_DELETED })\r\n      dispatch(setAlert('Your account has been deleted'))\r\n    } catch (err) {\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status }\r\n      })\r\n    }\r\n  }\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Moment from 'react-moment'\r\nimport PropTypes from 'prop-types'\r\nimport { deleteExperience } from '../../actions/profile'\r\n\r\nconst Experience = ({ experience, deleteExperience }) => {\r\n  const experiences = experience.map(exp => (\r\n    <tr key={exp._id}>\r\n      <td>{exp.company}</td>\r\n      <td className=\"hide-sm\">{exp.title}</td>\r\n      <td>\r\n        <Moment format=\"YYYY/MM/DD\">{exp.from}</Moment> -{' '}\r\n        {exp.to === null ? (\r\n          ' Now'\r\n        ) : (\r\n          <Moment format=\"YYYY/MM/DD\">{exp.to}</Moment>\r\n        )}\r\n      </td>\r\n      <td>\r\n        <button\r\n          onClick={() => deleteExperience(exp._id)}\r\n          className=\"btn btn-danger\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  ))\r\n\r\n  return (\r\n    <Fragment>\r\n      <h2 className=\"my-2\">Experience Credentials</h2>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Company</th>\r\n            <th className=\"hide-sm\">Title</th>\r\n            <th className=\"hide-sm\">Years</th>\r\n            <th />\r\n          </tr>\r\n        </thead>\r\n        <tbody>{experiences}</tbody>\r\n      </table>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nExperience.propTypes = {\r\n  experience: PropTypes.array.isRequired,\r\n  deleteExperience: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { deleteExperience })(Experience)\r\n","import React, { Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Moment from 'react-moment'\r\nimport PropTypes from 'prop-types'\r\nimport { deleteEducation } from '../../actions/profile'\r\n\r\nconst Education = ({ education, deleteEducation }) => {\r\n  const educations = education.map(edu => (\r\n    <tr key={edu._id}>\r\n      <td>{edu.school}</td>\r\n      <td className=\"hide-sm\">{edu.degree}</td>\r\n      <td>\r\n        <Moment format=\"YYYY/MM/DD\">{edu.from}</Moment> -{' '}\r\n        {edu.to === null ? (\r\n          ' Now'\r\n        ) : (\r\n          <Moment format=\"YYYY/MM/DD\">{edu.to}</Moment>\r\n        )}\r\n      </td>\r\n      <td>\r\n        <button\r\n          onClick={() => deleteEducation(edu._id)}\r\n          className=\"btn btn-danger\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  ))\r\n\r\n  return (\r\n    <Fragment>\r\n      <h2 className=\"my-2\">Education Credentials</h2>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>School</th>\r\n            <th className=\"hide-sm\">Degree</th>\r\n            <th className=\"hide-sm\">Years</th>\r\n            <th />\r\n          </tr>\r\n        </thead>\r\n        <tbody>{educations}</tbody>\r\n      </table>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nEducation.propTypes = {\r\n  education: PropTypes.array.isRequired,\r\n  deleteEducation: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { deleteEducation })(Education)\r\n","import React, { useEffect, Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport Spinner from '../layout/Spinner'\r\nimport DashboardActions from './DashboardActions'\r\nimport Experience from './Experience'\r\nimport Education from './Education'\r\nimport PropTypes from 'prop-types'\r\nimport { getCurrentProfile, deleteAccount } from '../../actions/profile'\r\n\r\nconst Dashboard = ({\r\n  getCurrentProfile,\r\n  deleteAccount,\r\n  auth: { user },\r\n  profile: { profile, loading }\r\n}) => {\r\n  useEffect(() => {\r\n    // if the user doesn't have a profile, you will get 400\r\n    getCurrentProfile()\r\n  }, [getCurrentProfile])\r\n\r\n  return loading && profile === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Dashboard</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\" /> Welcome {user && user.name}\r\n      </p>\r\n      {profile !== null ? (\r\n        <Fragment>\r\n          <DashboardActions />\r\n          <Experience experience={profile.experience} />\r\n          <Education education={profile.education} />\r\n          <div className=\"my-2\">\r\n            <button className=\"btn btn-danger\" onClick={() => deleteAccount()}>\r\n              <i className=\"fas fa-user-minus\"></i> Delete my account\r\n            </button>\r\n          </div>\r\n        </Fragment>\r\n      ) : (\r\n        <Fragment>\r\n          <p>You have not yet setup a profile, please add some info.</p>\r\n          <Link to=\"/create-profile\" className=\"btn btn-primary my-1\">\r\n            Create profile\r\n          </Link>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nDashboard.propTypes = {\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  deleteAccount: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  profile: state.profile\r\n})\r\n\r\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(\r\n  Dashboard\r\n)\r\n","import React, { useState, Fragment } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { createProfile } from '../../actions/profile'\r\n\r\nconst CreateProfile = ({ createProfile, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    website: '',\r\n    location: '',\r\n    status: '',\r\n    skills: '',\r\n    githubusername: '',\r\n    bio: '',\r\n    twitter: '',\r\n    facebook: '',\r\n    linkedin: '',\r\n    youtube: '',\r\n    instagram: ''\r\n  })\r\n\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false)\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram\r\n  } = formData\r\n\r\n  const onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value })\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault()\r\n    createProfile(formData, history)\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Create Your Profile</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\"></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <select name=\"status\" value={status} onChange={e => onChange(e)}>\r\n            <option value=\"0\">* Select Professional Status</option>\r\n            <option value=\"Developer\">Developer</option>\r\n            <option value=\"Junior Developer\">Junior Developer</option>\r\n            <option value=\"Senior Developer\">Senior Developer</option>\r\n            <option value=\"Manager\">Manager</option>\r\n            <option value=\"Student or Learning\">Student or Learning</option>\r\n            <option value=\"Instructor\">Instructor or Teacher</option>\r\n            <option value=\"Intern\">Intern</option>\r\n            <option value=\"Other\">Other</option>\r\n          </select>\r\n          <small className=\"form-text\">\r\n            Give us an idea of where you are at in your career\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Company\"\r\n            name=\"company\"\r\n            value={company}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            Could be your own company or one you work for\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Website\"\r\n            name=\"website\"\r\n            value={website}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            Could be your own or a company website\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Location\"\r\n            name=\"location\"\r\n            value={location}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            City & state suggested (eg. Boston, MA)\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"* Skills\"\r\n            name=\"skills\"\r\n            value={skills}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Github Username\"\r\n            name=\"githubusername\"\r\n            value={githubusername}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            If you want your latest repos and a Github link, include your\r\n            username\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            placeholder=\"A short bio of yourself\"\r\n            name=\"bio\"\r\n            value={bio}\r\n            onChange={e => onChange(e)}\r\n          ></textarea>\r\n          <small className=\"form-text\">Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className=\"my-2\">\r\n          <button\r\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n            type=\"button\"\r\n            className=\"btn btn-light\"\r\n          >\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n\r\n        {displaySocialInputs && (\r\n          <Fragment>\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-twitter fa-2x\"></i>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Twitter URL\"\r\n                name=\"twitter\"\r\n                value={twitter}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-facebook fa-2x\"></i>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Facebook URL\"\r\n                name=\"facebook\"\r\n                value={facebook}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-youtube fa-2x\"></i>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"YouTube URL\"\r\n                name=\"youtube\"\r\n                value={youtube}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-linkedin fa-2x\"></i>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Linkedin URL\"\r\n                name=\"linkedin\"\r\n                value={linkedin}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-instagram fa-2x\"></i>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Instagram URL\"\r\n                name=\"instagram\"\r\n                value={instagram}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nCreateProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { createProfile })(withRouter(CreateProfile))\r\n","import React, { useState, useEffect, Fragment } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { createProfile, getCurrentProfile } from '../../actions/profile'\r\n\r\nconst EditProfile = ({\r\n  profile: { profile, loading },\r\n  createProfile,\r\n  getCurrentProfile,\r\n  history\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    website: '',\r\n    location: '',\r\n    status: '',\r\n    skills: '',\r\n    githubusername: '',\r\n    bio: '',\r\n    twitter: '',\r\n    facebook: '',\r\n    linkedin: '',\r\n    youtube: '',\r\n    instagram: ''\r\n  })\r\n\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false)\r\n\r\n  useEffect(() => {\r\n    getCurrentProfile()\r\n\r\n    setFormData({\r\n      company: loading || !profile.company ? '' : profile.company,\r\n      website: loading || !profile.website ? '' : profile.website,\r\n      location: loading || !profile.location ? '' : profile.location,\r\n      status: loading || !profile.status ? '' : profile.status,\r\n      skills: loading || !profile.skills ? '' : profile.skills,\r\n      githubusername:\r\n        loading || !profile.githubusername ? '' : profile.githubusername,\r\n      bio: loading || !profile.bio ? '' : profile.bio,\r\n      twitter: loading || !profile.social ? '' : profile.social.twitter,\r\n      facebook: loading || !profile.social ? '' : profile.social.facebook,\r\n      linkedin: loading || !profile.social ? '' : profile.social.linkedin,\r\n      youtube: loading || !profile.social ? '' : profile.social.youtube,\r\n      instagram: loading || !profile.social ? '' : profile.social.instagram\r\n    })\r\n  }, [loading, getCurrentProfile])\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram\r\n  } = formData\r\n\r\n  const onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value })\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault()\r\n    createProfile(formData, history, true)\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Create Your Profile</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\"></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <select name=\"status\" value={status} onChange={e => onChange(e)}>\r\n            <option value=\"0\">* Select Professional Status</option>\r\n            <option value=\"Developer\">Developer</option>\r\n            <option value=\"Junior Developer\">Junior Developer</option>\r\n            <option value=\"Senior Developer\">Senior Developer</option>\r\n            <option value=\"Manager\">Manager</option>\r\n            <option value=\"Student or Learning\">Student or Learning</option>\r\n            <option value=\"Instructor\">Instructor or Teacher</option>\r\n            <option value=\"Intern\">Intern</option>\r\n            <option value=\"Other\">Other</option>\r\n          </select>\r\n          <small className=\"form-text\">\r\n            Give us an idea of where you are at in your career\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Company\"\r\n            name=\"company\"\r\n            value={company}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            Could be your own company or one you work for\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Website\"\r\n            name=\"website\"\r\n            value={website}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            Could be your own or a company website\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Location\"\r\n            name=\"location\"\r\n            value={location}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            City & state suggested (eg. Boston, MA)\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"* Skills\"\r\n            name=\"skills\"\r\n            value={skills}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Github Username\"\r\n            name=\"githubusername\"\r\n            value={githubusername}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            If you want your latest repos and a Github link, include your\r\n            username\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            placeholder=\"A short bio of yourself\"\r\n            name=\"bio\"\r\n            value={bio}\r\n            onChange={e => onChange(e)}\r\n          ></textarea>\r\n          <small className=\"form-text\">Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className=\"my-2\">\r\n          <button\r\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n            type=\"button\"\r\n            className=\"btn btn-light\"\r\n          >\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n\r\n        {displaySocialInputs && (\r\n          <Fragment>\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-twitter fa-2x\"></i>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Twitter URL\"\r\n                name=\"twitter\"\r\n                value={twitter}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-facebook fa-2x\"></i>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Facebook URL\"\r\n                name=\"facebook\"\r\n                value={facebook}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-youtube fa-2x\"></i>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"YouTube URL\"\r\n                name=\"youtube\"\r\n                value={youtube}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-linkedin fa-2x\"></i>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Linkedin URL\"\r\n                name=\"linkedin\"\r\n                value={linkedin}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-instagram fa-2x\"></i>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Instagram URL\"\r\n                name=\"instagram\"\r\n                value={instagram}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nEditProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  getCurrentProfile: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile\r\n})\r\n\r\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\r\n  withRouter(EditProfile)\r\n)\r\n","import React, { Fragment, useState } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { addExperience } from '../../actions/profile'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddExperience = ({ addExperience, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    title: '',\r\n    location: '',\r\n    from: '',\r\n    to: '',\r\n    current: false,\r\n    description: ''\r\n  })\r\n\r\n  const [toDateDisabled, toggleDisabled] = useState(false)\r\n\r\n  const { company, title, location, from, to, current, description } = formData\r\n\r\n  const onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value })\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Add An Experience</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-code-branch\"></i> Add any developer/programming\r\n        positions that you have had in the past\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form\r\n        className=\"form\"\r\n        onSubmit={e => {\r\n          e.preventDefault()\r\n          addExperience(formData, history)\r\n        }}\r\n      >\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"* Job Title\"\r\n            name=\"title\"\r\n            value={title}\r\n            onChange={e => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"* Company\"\r\n            name=\"company\"\r\n            value={company}\r\n            onChange={e => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Location\"\r\n            name=\"location\"\r\n            value={location}\r\n            onChange={e => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <h4>From Date</h4>\r\n          <input\r\n            type=\"date\"\r\n            name=\"from\"\r\n            value={from}\r\n            onChange={e => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <p>\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"current\"\r\n              checked={current}\r\n              value={current}\r\n              onChange={e => {\r\n                setFormData({ ...formData, current: !current })\r\n                toggleDisabled(!toDateDisabled)\r\n              }}\r\n            />{' '}\r\n            Current Job\r\n          </p>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <h4>To Date</h4>\r\n          <input\r\n            type=\"date\"\r\n            name=\"to\"\r\n            value={to}\r\n            onChange={e => onChange(e)}\r\n            disabled={toDateDisabled ? 'disabled' : ''}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            name=\"description\"\r\n            cols=\"30\"\r\n            rows=\"5\"\r\n            placeholder=\"Job Description\"\r\n            value={description}\r\n            onChange={e => onChange(e)}\r\n          ></textarea>\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nAddExperience.propTypes = {\r\n  addExperience: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { addExperience })(withRouter(AddExperience))\r\n","import React, { Fragment, useState } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { addEducation } from '../../actions/profile'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddEducation = ({ addEducation, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    school: '',\r\n    degree: '',\r\n    fieldofstudy: '',\r\n    from: '',\r\n    to: '',\r\n    current: false,\r\n    description: ''\r\n  })\r\n\r\n  const [toDateDisabled, toggleDisabled] = useState(false)\r\n\r\n  const {\r\n    school,\r\n    degree,\r\n    fieldofstudy,\r\n    from,\r\n    to,\r\n    current,\r\n    description\r\n  } = formData\r\n\r\n  const onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value })\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Add An Education</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-code-branch\"></i> Add any developer/programming\r\n        positions that you have had in the past\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form\r\n        className=\"form\"\r\n        onSubmit={e => {\r\n          e.preventDefault()\r\n          addEducation(formData, history)\r\n        }}\r\n      >\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"* School\"\r\n            name=\"school\"\r\n            value={school}\r\n            onChange={e => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"* Degree\"\r\n            name=\"degree\"\r\n            value={degree}\r\n            onChange={e => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Field of study\"\r\n            name=\"fieldofstudy\"\r\n            value={fieldofstudy}\r\n            onChange={e => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <h4>From Date</h4>\r\n          <input\r\n            type=\"date\"\r\n            name=\"from\"\r\n            value={from}\r\n            onChange={e => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <p>\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"current\"\r\n              checked={current}\r\n              value={current}\r\n              onChange={e => {\r\n                setFormData({ ...formData, current: !current })\r\n                toggleDisabled(!toDateDisabled)\r\n              }}\r\n            />{' '}\r\n            Current Education\r\n          </p>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <h4>To Date</h4>\r\n          <input\r\n            type=\"date\"\r\n            name=\"to\"\r\n            value={to}\r\n            onChange={e => onChange(e)}\r\n            disabled={toDateDisabled ? 'disabled' : ''}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            name=\"description\"\r\n            cols=\"30\"\r\n            rows=\"5\"\r\n            placeholder=\"Program Description\"\r\n            value={description}\r\n            onChange={e => onChange(e)}\r\n          ></textarea>\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nAddEducation.propTypes = {\r\n  addEducation: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { addEducation })(withRouter(AddEducation))\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ProfileItem = ({\r\n  profile: {\r\n    user: { _id, name, avatar },\r\n    status,\r\n    company,\r\n    location,\r\n    skills\r\n  }\r\n}) => {\r\n  return (\r\n    <div className=\"profile bg-light\">\r\n      <img src={avatar} alt=\"\" className=\"round-img\" />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>\r\n          {status} {company && <span> at {company}</span>}\r\n        </p>\r\n        <p className=\"my-1\">{location && <span>{location}</span>}</p>\r\n        <Link to={`/profile/${_id}`} className=\"btn btn-primary\">\r\n          View profile\r\n        </Link>\r\n      </div>\r\n      <ul>\r\n        {skills.slice(0, 4).map((skill, index) => (\r\n          <li key={index} className=\"text-primary\">\r\n            <i className=\"fas fa-check\"></i> {skill}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nProfileItem.propTypes = {\r\n  profile: PropTypes.object.isRequired\r\n}\r\n\r\nexport default ProfileItem\r\n","import React, { Fragment, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport Spinner from '../layout/Spinner'\r\nimport ProfileItem from './ProfileItem'\r\nimport { getProfiles } from '../../actions/profile'\r\n\r\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\r\n  useEffect(() => {\r\n    getProfiles()\r\n  }, [getProfiles])\r\n\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <Fragment>\r\n          <h1 className=\"large text-primary\">Developers</h1>\r\n          <p className=\"lead\">\r\n            <i className=\"fab fa-connectdevelop\"></i> Browse and connect with\r\n            developers\r\n          </p>\r\n          <div className=\"profiles\">\r\n            {profiles.length > 0 ? (\r\n              profiles.map(profile => (\r\n                <ProfileItem key={profile._id} profile={profile} />\r\n              ))\r\n            ) : (\r\n              <h4>No profiles found</h4>\r\n            )}\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nProfiles.propTypes = {\r\n  getProfiles: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile\r\n})\r\n\r\nexport default connect(mapStateToProps, { getProfiles })(Profiles)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ProfileTop = ({\r\n  profile: {\r\n    status,\r\n    company,\r\n    location,\r\n    website,\r\n    social,\r\n    user: { name, avatar }\r\n  }\r\n}) => {\r\n  return (\r\n    <div className=\"profile-top bg-primary p-2\">\r\n      <img className=\"round-img my-1\" src={avatar} alt=\"\" />\r\n      <h1 className=\"large\">{name}</h1>\r\n      <p className=\"lead\">\r\n        {status} {company && <span> at {company}</span>}\r\n      </p>\r\n      <p>{location && <span>{location}</span>}</p>\r\n      <div className=\"icons my-1\">\r\n        {website && (\r\n          <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <i className=\"fas fa-globe fa-2x\"></i>\r\n          </a>\r\n        )}\r\n        {social && social.twitter && (\r\n          <a href={social.twitter} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <i className=\"fab fa-twitter fa-2x\"></i>\r\n          </a>\r\n        )}\r\n        {social && social.facebook && (\r\n          <a href={social.facebook} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <i className=\"fab fa-facebook fa-2x\"></i>\r\n          </a>\r\n        )}\r\n        {social && social.linkedin && (\r\n          <a href={social.linkedin} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <i className=\"fab fa-linkedin fa-2x\"></i>\r\n          </a>\r\n        )}\r\n        {social && social.youtube && (\r\n          <a href={social.youtube} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <i className=\"fab fa-youtube fa-2x\"></i>\r\n          </a>\r\n        )}\r\n        {social && social.instagram && (\r\n          <a href={social.instagram} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <i className=\"fab fa-instagram fa-2x\"></i>\r\n          </a>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nProfileTop.propTypes = {\r\n  profile: PropTypes.object.isRequired\r\n}\r\n\r\nexport default ProfileTop\r\n","import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ProfileAbout = ({\r\n  profile: {\r\n    bio,\r\n    skills,\r\n    user: { name }\r\n  }\r\n}) => {\r\n  return (\r\n    <div className=\"profile-about bg-light p-2\">\r\n      {bio && (\r\n        <Fragment>\r\n          <h2 className=\"text-primary\">{name.trim().split(' ')[0]}'s Bio</h2>\r\n          <p>{bio}</p>\r\n          <div className=\"line\"></div>\r\n        </Fragment>\r\n      )}\r\n\r\n      <h2 className=\"text-primary\">Skill Set</h2>\r\n      <div className=\"skills\">\r\n        {skills.map((skill, index) => (\r\n          <div className=\"p-1\" key={index}>\r\n            <i className=\"fas fa-check\"></i> {skill}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nProfileAbout.propTypes = {\r\n  profile: PropTypes.object.isRequired\r\n}\r\n\r\nexport default ProfileAbout\r\n","import React from 'react'\r\nimport Moment from 'react-moment'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ProfileExperience = ({\r\n  experience: { company, title, location, current, from, to, description }\r\n}) => (\r\n  <div>\r\n    <h3 className=\"text-dark\">{company}</h3>\r\n    <p>\r\n      <Moment format=\"YYYY/MM/DD\">{from}</Moment> -{' '}\r\n      {!to ? ' Now' : <Moment format=\"YYYY/MM/DD\">{to}</Moment>}\r\n    </p>\r\n    <p>\r\n      <strong>Position: </strong> {title}\r\n    </p>\r\n    <p>\r\n      <strong>Description: </strong> {description}\r\n    </p>\r\n  </div>\r\n)\r\n\r\nProfileExperience.propTypes = {\r\n  experience: PropTypes.object.isRequired\r\n}\r\n\r\nexport default ProfileExperience\r\n","import React from 'react'\r\nimport Moment from 'react-moment'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ProfileEducation = ({\r\n  education: { school, degree, fieldofstudy, current, from, to, description }\r\n}) => (\r\n  <div>\r\n    <h3 className=\"text-dark\">{school}</h3>\r\n    <p>\r\n      <Moment format=\"YYYY/MM/DD\">{from}</Moment> -{' '}\r\n      {!to ? ' Now' : <Moment format=\"YYYY/MM/DD\">{to}</Moment>}\r\n    </p>\r\n    <p>\r\n      <strong>Field of study: </strong> {fieldofstudy}\r\n    </p>\r\n    <p>\r\n      <strong>Degree: </strong> {degree}\r\n    </p>\r\n    <p>\r\n      <strong>Description: </strong> {description}\r\n    </p>\r\n  </div>\r\n)\r\n\r\nProfileEducation.propTypes = {\r\n  education: PropTypes.object.isRequired\r\n}\r\n\r\nexport default ProfileEducation\r\n","import React, { Fragment, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport Spinner from '../layout/Spinner'\r\nimport ProfileTop from './ProfileTop'\r\nimport ProfileAbout from './ProfileAbout'\r\nimport ProfileExperience from './ProfileExperience'\r\nimport ProfileEducation from './ProfileEducation'\r\nimport PropTypes from 'prop-types'\r\nimport { getProfileById } from '../../actions/profile'\r\n\r\nconst Profile = ({\r\n  match,\r\n  getProfileById,\r\n  profile: { profile, loading },\r\n  auth\r\n}) => {\r\n  useEffect(() => {\r\n    getProfileById(match.params.id)\r\n  }, [getProfileById])\r\n\r\n  return (\r\n    <Fragment>\r\n      {profile === null || loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <Fragment>\r\n          <Link to=\"/profiles\" className=\"btn btn-light\">\r\n            Back to profiles\r\n          </Link>\r\n          {auth.isAuthenticated &&\r\n            !auth.loading &&\r\n            auth.user._id === profile.user._id && (\r\n              <Link to=\"/edit-profile\" className=\"btn btn-dark\">\r\n                Edit profile\r\n              </Link>\r\n            )}\r\n          <div className=\"profile-grid my-1\">\r\n            <ProfileTop profile={profile} />\r\n            <ProfileAbout profile={profile} />\r\n\r\n            <div className=\"profile-exp bg-white p-2\">\r\n              <h2 className=\"text-primary\">Experience</h2>\r\n              {profile.experience.length > 0 ? (\r\n                <Fragment>\r\n                  {profile.experience.map(exp => (\r\n                    <ProfileExperience key={exp._id} experience={exp} />\r\n                  ))}\r\n                </Fragment>\r\n              ) : (\r\n                <h4>No experience credentials</h4>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"profile-edu bg-white p-2\">\r\n              <h2 className=\"text-primary\">Education</h2>\r\n              {profile.education.length > 0 ? (\r\n                <Fragment>\r\n                  {profile.education.map(edu => (\r\n                    <ProfileEducation key={edu._id} education={edu} />\r\n                  ))}\r\n                </Fragment>\r\n              ) : (\r\n                <h4>No education credentials</h4>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nProfile.propTypes = {\r\n  getProfileById: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile,\r\n  auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { getProfileById })(Profile)\r\n","import React, { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport Moment from 'react-moment'\r\nimport { connect } from 'react-redux'\r\nimport { addLike, removeLike, deletePost } from '../../actions/post'\r\n\r\nconst PostItem = ({\r\n  addLike,\r\n  removeLike,\r\n  deletePost,\r\n  auth,\r\n  post: { _id, text, name, avatar, user, likes, comments, date },\r\n  showActions\r\n}) => {\r\n  return (\r\n    <div className=\"post bg-white p-1 my-1\">\r\n      <div>\r\n        <Link to={`/profile/${user}`}>\r\n          <img className=\"round-img\" src={avatar} alt=\"\" />\r\n          <h4>{name}</h4>\r\n        </Link>\r\n      </div>\r\n      <div>\r\n        <p className=\"my-1\">{text}</p>\r\n        <p className=\"post-date\">\r\n          Posted on <Moment format=\"YYYY/MM/DD\">{date}</Moment>\r\n        </p>\r\n        {showActions && (\r\n          <Fragment>\r\n            <button\r\n              onClick={() => addLike(_id)}\r\n              type=\"button\"\r\n              className=\"btn btn-light\"\r\n            >\r\n              <i className=\"fas fa-thumbs-up\"></i>{' '}\r\n              {likes.length > 0 && <span>{likes.length}</span>}\r\n            </button>\r\n            <button\r\n              onClick={() => removeLike(_id)}\r\n              type=\"button\"\r\n              className=\"btn btn-light\"\r\n            >\r\n              <i className=\"fas fa-thumbs-down\"></i>\r\n            </button>\r\n            <Link to={`/posts/${_id}`} className=\"btn btn-primary\">\r\n              Discussion{' '}\r\n              {comments.length > 0 && (\r\n                <span className=\"comment-count\">{comments.length}</span>\r\n              )}\r\n            </Link>\r\n            {!auth.loading && user === auth.user._id && (\r\n              <button\r\n                onClick={() => deletePost(_id)}\r\n                type=\"button\"\r\n                className=\"btn btn-danger\"\r\n              >\r\n                <i className=\"fas fa-times\"></i>\r\n              </button>\r\n            )}\r\n          </Fragment>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nPostItem.defaultProps = {\r\n  showActions: true\r\n}\r\n\r\nPostItem.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  addLike: PropTypes.func.isRequired,\r\n  removeLike: PropTypes.func.isRequired,\r\n  deletePost: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(\r\n  PostItem\r\n)\r\n","import axios from 'axios'\r\nimport { setAlert } from './alert'\r\nimport {\r\n  GET_POSTS,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  DELETE_POST,\r\n  ADD_POST,\r\n  GET_POST,\r\n  ADD_COMMENT,\r\n  REMOVE_COMMENT\r\n} from './types'\r\n\r\n// get all posts\r\nexport const getPosts = () => async dispatch => {\r\n  try {\r\n    const res = await axios.get('/api/posts')\r\n    dispatch({ type: GET_POSTS, payload: res.data })\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    })\r\n  }\r\n}\r\n\r\n// add like\r\nexport const addLike = postID => async dispatch => {\r\n  try {\r\n    const res = await axios.put(`/api/posts/like/${postID}`)\r\n    dispatch({ type: UPDATE_LIKES, payload: { postID, likes: res.data } })\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    })\r\n  }\r\n}\r\n\r\n// remove like\r\nexport const removeLike = postID => async dispatch => {\r\n  try {\r\n    const res = await axios.put(`/api/posts/unlike/${postID}`)\r\n    dispatch({ type: UPDATE_LIKES, payload: { postID, likes: res.data } })\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    })\r\n  }\r\n}\r\n\r\n// delete a post\r\nexport const deletePost = postID => async dispatch => {\r\n  try {\r\n    const res = await axios.delete(`/api/posts/${postID}`)\r\n    dispatch({ type: DELETE_POST, payload: postID })\r\n    dispatch(setAlert('Post removed', 'success'))\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    })\r\n  }\r\n}\r\n\r\n// add a new post\r\nexport const addPost = formData => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }\r\n  try {\r\n    const res = await axios.post('/api/posts', formData, config)\r\n    dispatch({ type: ADD_POST, payload: res.data })\r\n    dispatch(setAlert('Post created', 'success'))\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    })\r\n  }\r\n}\r\n\r\n// get a single post\r\nexport const getPost = postID => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/posts/${postID}`)\r\n    dispatch({ type: GET_POST, payload: res.data })\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    })\r\n  }\r\n}\r\n\r\n// add a comment to post\r\nexport const addComment = (formData, postID) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }\r\n  try {\r\n    const res = await axios.post(\r\n      `/api/posts/comment/${postID}`,\r\n      formData,\r\n      config\r\n    )\r\n    dispatch({ type: ADD_COMMENT, payload: res.data })\r\n    dispatch(setAlert('Comment added', 'success'))\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    })\r\n  }\r\n}\r\n\r\n// delete a comment from post\r\nexport const deleteComment = (postID, commentID) => async dispatch => {\r\n  try {\r\n    const res = await axios.delete(`/api/posts/comment/${postID}/${commentID}`)\r\n    dispatch({ type: REMOVE_COMMENT, payload: commentID })\r\n    dispatch(setAlert('Comment removed', 'success'))\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    })\r\n  }\r\n}\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { addPost } from '../../actions/post'\r\n\r\nconst PostForm = ({ addPost }) => {\r\n  const [text, setText] = useState('')\r\n\r\n  return (\r\n    <div className=\"post-form\">\r\n      <div className=\"bg-primary p\">\r\n        <h3>Say Something...</h3>\r\n      </div>\r\n      <form\r\n        className=\"form my-1\"\r\n        onSubmit={e => {\r\n          e.preventDefault()\r\n          addPost({ text })\r\n          setText('')\r\n        }}\r\n      >\r\n        <textarea\r\n          name=\"text\"\r\n          cols=\"30\"\r\n          rows=\"5\"\r\n          placeholder=\"Create a post\"\r\n          value={text}\r\n          onChange={e => setText(e.target.value)}\r\n          required\r\n        ></textarea>\r\n        <input type=\"submit\" className=\"btn btn-dark my-1\" value=\"Submit\" />\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nPostForm.propTypes = {\r\n  addPost: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { addPost })(PostForm)\r\n","import React, { Fragment, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getPosts } from '../../actions/post'\r\nimport Spinner from '../layout/Spinner'\r\nimport PostItem from './PostItem'\r\nimport PostForm from './PostForm'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Posts = ({ getPosts, post: { posts, loading } }) => {\r\n  useEffect(() => {\r\n    getPosts()\r\n  }, [getPosts])\r\n\r\n  return loading ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <h1 className=\"text-large\">Posts</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\"></i> Welcome to the community\r\n      </p>\r\n      <PostForm />\r\n      <div className=\"posts\">\r\n        {posts.map(post => (\r\n          <PostItem key={post._id} post={post} />\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nPosts.propTypes = {\r\n  getPosts: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  post: state.post\r\n})\r\n\r\nexport default connect(mapStateToProps, { getPosts })(Posts)\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { addComment } from '../../actions/post'\r\n\r\nconst CommentForm = ({ addComment, postID }) => {\r\n  const [text, setText] = useState('')\r\n\r\n  return (\r\n    <div className=\"post-form\">\r\n      <div className=\"bg-primary p\">\r\n        <h3>Leave a comment</h3>\r\n      </div>\r\n      <form\r\n        className=\"form my-1\"\r\n        onSubmit={e => {\r\n          e.preventDefault()\r\n          addComment({ text }, postID)\r\n          setText('')\r\n        }}\r\n      >\r\n        <textarea\r\n          name=\"text\"\r\n          cols=\"30\"\r\n          rows=\"5\"\r\n          placeholder=\"Add comment\"\r\n          value={text}\r\n          onChange={e => setText(e.target.value)}\r\n          required\r\n        ></textarea>\r\n        <input type=\"submit\" className=\"btn btn-dark my-1\" value=\"Submit\" />\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nCommentForm.propTypes = {\r\n  addComment: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { addComment })(CommentForm)\r\n","import React, { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Moment from 'react-moment'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { deleteComment } from '../../actions/post'\r\n\r\nconst CommentItem = ({\r\n  postID,\r\n  deleteComment,\r\n  comment: { _id, text, name, avatar, user, date },\r\n  auth\r\n}) => {\r\n  return (\r\n    <div className=\"post bg-white p-1 my-1\">\r\n      <div>\r\n        <Link to={`/profile/${user}`}>\r\n          <img className=\"round-img\" src={avatar} alt=\"\" />\r\n          <h4>{name}</h4>\r\n        </Link>\r\n      </div>\r\n      <div>\r\n        <p className=\"my-1\">{text}</p>\r\n        <p className=\"post-date\">\r\n          Posted on <Moment format=\"YYYY/MM/DD\">{date}</Moment>\r\n        </p>\r\n        {!auth.loading && user === auth.user._id && (\r\n          <button\r\n            onClick={e => deleteComment(postID, _id)}\r\n            className=\"btn btn-danger\"\r\n          >\r\n            <i className=\"fas fa-times\"></i>\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nCommentItem.propTypes = {\r\n  postID: PropTypes.string.isRequired,\r\n  comment: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  deleteComment: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { deleteComment })(CommentItem)\r\n","import React, { Fragment, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport Spinner from '../layout/Spinner'\r\nimport PostItem from '../posts/PostItem'\r\nimport CommentForm from './CommentForm'\r\nimport CommentItem from './CommentItem'\r\nimport { getPost } from '../../actions/post'\r\n\r\nconst Post = ({ getPost, post: { post, loading }, match }) => {\r\n  useEffect(() => {\r\n    getPost(match.params.id)\r\n  }, [getPost])\r\n\r\n  return loading || post === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <Link to=\"/posts\" className=\"btn\">\r\n        Back to posts\r\n      </Link>\r\n      <PostItem post={post} showActions={false} />\r\n      <CommentForm postID={post._id} />\r\n      <div className=\"comments\">\r\n        {post.comments.map(com => (\r\n          <CommentItem key={com._id} comment={com} postID={post._id} />\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nPost.propTypes = {\r\n  getPost: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  post: state.post\r\n})\r\n\r\nexport default connect(mapStateToProps, { getPost })(Post)\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\n\r\n// this component redirects me to /login if I'm not authenticated\r\n// it protects routes that should be private\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  auth: { isAuthenticated, loading },\r\n  ...rest\r\n}) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      !isAuthenticated && !loading ? (\r\n        <Redirect to=\"/login\" />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n)\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute)\r\n","import { SET_ALERT, REMOVE_ALERT } from '../actions/types'\r\n\r\nconst initialState = []\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_ALERT:\r\n      return [...state, action.payload]\r\n    case REMOVE_ALERT:\r\n      return state.filter(alert => alert.id !== action.payload)\r\n    default:\r\n      return state\r\n  }\r\n}","import {\r\n  REGISTER_FAIL,\r\n  REGISTER_SUCCESS,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  ACCOUNT_DELETED\r\n} from '../actions/types'\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem('token'),\r\n  isAuthenticated: null,\r\n  // why use 'loading' ??\r\n  loading: true,\r\n  user: null\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem('token', action.payload.token)\r\n      return {\r\n        ...state,\r\n        // what does '...action.payload' do ???\r\n        ...action.payload,\r\n        isAuthenticated: true,\r\n        loading: false\r\n      }\r\n    case REGISTER_FAIL:\r\n    case LOGIN_FAIL:\r\n    case AUTH_ERROR:\r\n    case LOGOUT:\r\n    case ACCOUNT_DELETED:\r\n      localStorage.removeItem('token')\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false\r\n      }\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: action.payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import {\r\n  GET_PROFILE,\r\n  GET_PROFILES,\r\n  PROFILE_ERROR,\r\n  CLEAR_PROFILE,\r\n  UPDATE_PROFILE\r\n} from '../actions/types'\r\n\r\nconst initialState = {\r\n  profile: null,\r\n  profiles: [],\r\n  loading: true, // once we make a request, this will turn to false\r\n  error: {}\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROFILE:\r\n    case UPDATE_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: action.payload,\r\n        loading: false\r\n      }\r\n    case GET_PROFILES:\r\n      return {\r\n        ...state,\r\n        profiles: action.payload,\r\n        loading: false\r\n      }\r\n    case PROFILE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false\r\n      }\r\n    case CLEAR_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: null,\r\n        repos: [],\r\n        loading: false\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import {\r\n  GET_POSTS,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  DELETE_POST,\r\n  ADD_POST,\r\n  GET_POST,\r\n  ADD_COMMENT,\r\n  REMOVE_COMMENT\r\n} from '../actions/types'\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  post: null,\r\n  loading: true,\r\n  error: {}\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: action.payload,\r\n        loading: false\r\n      }\r\n    case GET_POST:\r\n      return {\r\n        ...state,\r\n        post: action.payload,\r\n        loading: false\r\n      }\r\n    case ADD_POST:\r\n      return {\r\n        ...state,\r\n        posts: [action.payload, ...state.posts],\r\n        loading: false\r\n      }\r\n    case POST_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false\r\n      }\r\n    case UPDATE_LIKES:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map(post =>\r\n          post._id === action.payload.postID\r\n            ? { ...post, likes: action.payload.likes }\r\n            : post\r\n        ),\r\n        loading: false\r\n      }\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter(post => post._id !== action.payload),\r\n        loading: false\r\n      }\r\n    case ADD_COMMENT:\r\n      return {\r\n        ...state,\r\n        post: {\r\n          ...state.post,\r\n          comments: action.payload\r\n        },\r\n        loading: false\r\n      }\r\n    case REMOVE_COMMENT:\r\n      return {\r\n        ...state,\r\n        post: {\r\n          ...state.post,\r\n          comments: state.post.comments.filter(\r\n            com => com._id !== action.payload\r\n          )\r\n        },\r\n        loading: false\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport alert from './alert'\r\nimport auth from './auth'\r\nimport profile from './profile'\r\nimport post from './post'\r\n\r\nexport default combineReducers({\r\n  alert,\r\n  auth,\r\n  profile,\r\n  post\r\n})\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers' // /index.js is redundant\r\n\r\nconst initialState = {}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store\r\n","import React, { Fragment, useEffect } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Register from './components/auth/Register'\nimport Login from './components/auth/Login'\nimport Navbar from './components/layout/Navbar'\nimport Landing from './components/layout/Landing'\nimport Alert from './components/layout/Alert'\nimport Dashboard from './components/dashboard/Dashboard'\nimport CreateProfile from './components/profile-form/CreateProfile'\nimport EditProfile from './components/profile-form/EditProfile'\nimport AddExperience from './components/profile-form/AddExperience'\nimport AddEducation from './components/profile-form/AddEducation'\nimport Profiles from './components/profiles/Profiles'\nimport Profile from './components/profile/Profile'\nimport Posts from './components/posts/Posts'\nimport Post from './components/post/Post'\nimport PrivateRoute from './components/routing/PrivateRoute'\nimport './App.css'\n\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport setAuthToken from './utils/setAuthToken'\nimport { loadUser } from './actions/auth'\n\n// wtf is dis??\nconsole.log(localStorage.token === localStorage.getItem('token')) // true\nif (localStorage.token) {\n  setAuthToken(localStorage.token)\n}\n\nconst App = () => {\n  // every time the user re-enters our web, we wanna load them in\n  useEffect(() => {\n    store.dispatch(loadUser())\n  }, [])\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <Navbar />\n          <Route exact path=\"/\" component={Landing} />\n          <section className=\"container\">\n            <Alert />\n            <Switch>\n              <Route exact path=\"/register\" component={Register} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/profiles\" component={Profiles} />\n              <Route exact path=\"/profile/:id\" component={Profile} />\n              <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n              <PrivateRoute\n                exact\n                path=\"/create-profile\"\n                component={CreateProfile}\n              />\n              <PrivateRoute\n                exact\n                path=\"/edit-profile\"\n                component={EditProfile}\n              />\n              <PrivateRoute\n                exact\n                path=\"/add-experience\"\n                component={AddExperience}\n              />\n              <PrivateRoute\n                exact\n                path=\"/add-education\"\n                component={AddEducation}\n              />\n              <PrivateRoute exact path=\"/posts\" component={Posts} />\n              <PrivateRoute exact path=\"/posts/:id\" component={Post} />\n            </Switch>\n          </section>\n        </Fragment>\n      </Router>\n    </Provider>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}